name: Validate Pull Request

on:
  pull_request_target:
    branches: [ main ]
    paths: [ 'requests/**/*.json' ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: requests/**/*.json
    
    - name: Validate requests
      if: steps.changed-files.outputs.any_changed == 'true'
      id: validate-request
      run: |
        echo "Validating changed request files..."
        validation_errors=""
        exit_code=0
        
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "Validating $file"
          if ! output=$(node scripts/validate-request.js "$file" 2>&1); then
            validation_errors="$validation_errors\n**File: $file**\n$output\n"
            exit_code=1
          fi
        done
        
        if [ $exit_code -ne 0 ]; then
          echo "validation_errors<<EOF" >> $GITHUB_OUTPUT
          echo -e "$validation_errors" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          exit 1
        fi
    
    - name: Check GitHub user
      if: steps.changed-files.outputs.any_changed == 'true'
      id: check-user
      run: |
        echo "Checking GitHub user requirements..."
        if ! output=$(node scripts/check-github-user.js "${{ github.event.pull_request.user.login }}" 2>&1); then
          echo "user_errors<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          exit 1
        fi
    
    - name: Comment validation errors on PR
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          let comment = '❌ **Request validation failed**\n\n';
          
          if ('${{ steps.validate-request.outputs.validation_errors }}') {
            comment += '## Request Validation Errors\n';
            comment += '${{ steps.validate-request.outputs.validation_errors }}';
            comment += '\n';
          }
          
          if ('${{ steps.check-user.outputs.user_errors }}') {
            comment += '## GitHub User Requirements\n';
            comment += '${{ steps.check-user.outputs.user_errors }}';
            comment += '\n';
          }
          
          comment += '\n---\n';
          comment += 'Please fix the issues above and update your pull request.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Comment success on PR
      if: success() && steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ **Validation successful!**\n\nYour request has been validated successfully and meets all requirements. It will be reviewed by maintainers for approval.'
          })
