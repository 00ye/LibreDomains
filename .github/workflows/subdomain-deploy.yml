name: Subdomain Deployment

on:
  pull_request:
    types: [closed]
    paths:
      - 'subdomains/*.json'

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate JSON format
        run: |
          for file in subdomains/*.json; do
            jq empty "$file" || exit 1
          done

  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug event data
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Pull request merged: ${{ github.event.pull_request.merged }}"

      - name: Check for duplicate subdomains
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          for file in subdomains/*.json; do
            subdomain=$(basename "$file" .json)
            record=$(jq -r '.record' "$file")

            echo "Checking subdomain: $record"

            # Check if the subdomain already exists
            response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records?name=$record" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json")

            echo "Response: $response"

            if echo "$response" | jq -e '.result | length > 0' > /dev/null; then
              echo "Error: Subdomain $record already exists."
              exit 1
            fi
          done

      - name: Deploy to Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          for file in subdomains/*.json; do
            subdomain=$(basename "$file" .json)
            record=$(jq -r '.record' "$file")
            type=$(jq -r '.type' "$file")
            content=$(jq -r '.content' "$file")
            ttl=$(jq -r '.ttl' "$file")

            echo "Deploying subdomain: $record"

            response=$(curl -s -o response.txt -w "%{http_code}" -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data '{
                "type": "'"$type"'",
                "name": "'"$record"'",
                "content": "'"$content"'",
                "ttl": '"$ttl"'
              }')

            cat response.txt
            echo "HTTP Status Code: $response"
          done
